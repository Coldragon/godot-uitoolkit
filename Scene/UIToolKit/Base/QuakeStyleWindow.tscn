[gd_scene load_steps=7 format=2]

[ext_resource path="res://Fonts/Res/font1-16.tres" type="DynamicFont" id=1]

[sub_resource type="StyleBoxFlat" id=1]
bg_color = Color( 0.0941176, 0.0941176, 0.0941176, 1 )
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
border_color = Color( 0, 0, 0, 0.933333 )
border_blend = true
corner_detail = 10
shadow_color = Color( 0, 0, 0, 0.54902 )

[sub_resource type="GDScript" id=2]
script/source = "extends Panel

onready var tween = $Tween
onready var button = $HideShow

export (int) var height_window = 300
export (float) var speed_window = 0.7
enum Direction {TOP=0, DOWN=1}
export (Direction) var expand_direction = Direction.DOWN
export(int, \"EASE_IN\", \"EASE_OUT\", \"EASE_IN_OUT\", \"EASE_OUT_IN\") var ease_type = Tween.EASE_OUT
export(int, \"TRANS_LINEAR\", \"TRANS_SINE\", \"TRANS_QUINT\", \"TRANS_QUART\", \"TRANS_QUAD\", \"TRANS_EXPO\", \"TRANS_ELASTIC\", \"TRANS_CUBIC\", \"TRANS_CIRC\", \"TRANS_BOUNCE\", \"TRANS_BACK\") var transition_type = Tween.TRANS_BOUNCE

export(String) var closed_button_string = \"\"
export(String) var opened_button_string = \"\"

export (bool) var is_closed = true
var switch = true

func _ready():
	if is_closed:
		rect_size.y = 0
		button.text = closed_button_string
	else:
		call_deferred(\"tween_start\")
		tween.call_deferred(\"seek\", speed_window)
		button.text = opened_button_string

func tween_start():
	if switch:
		if expand_direction == Direction.TOP:
			button.anchor_top = 0
			button.anchor_bottom = 0
			tween.interpolate_property(self, \"rect_position:y\",
				rect_position.y, rect_position.y - (height_window), speed_window,
				transition_type, ease_type)
		else:
			button.anchor_top = 1
			button.anchor_bottom = 1
		tween.interpolate_property(self, \"rect_size:y\",
			rect_size.y, rect_size.y + (height_window), speed_window,
			transition_type, ease_type)
		tween.start()
		
	else:
		if expand_direction == Direction.TOP:
			tween.interpolate_property(self, \"rect_position:y\",
				self.rect_position.y, self.rect_position.y + height_window, speed_window,
				transition_type, ease_type)
		tween.interpolate_property(self, \"rect_size:y\",
			self.rect_size.y, self.rect_size.y - height_window, speed_window,
			transition_type, ease_type)
		tween.start()
	
	switch = !switch

func _on_HideShow_pressed():
	if switch:
		tween_start()
		button.text = opened_button_string
	else:
		tween_start()
		button.text = closed_button_string
"

[sub_resource type="StyleBoxFlat" id=3]
bg_color = Color( 0.278431, 0.278431, 0.278431, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.0745098, 0.0745098, 0.0745098, 1 )
border_blend = true
corner_radius_top_left = 1
corner_radius_top_right = 1
corner_radius_bottom_right = 1
corner_radius_bottom_left = 1
corner_detail = 5
shadow_size = 1

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0.160784, 0.160784, 0.160784, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.0745098, 0.0745098, 0.0745098, 1 )
border_blend = true
corner_radius_top_left = 1
corner_radius_top_right = 1
corner_radius_bottom_right = 1
corner_radius_bottom_left = 1
corner_detail = 5
shadow_size = 1

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.203922, 0.203922, 0.203922, 1 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.0745098, 0.0745098, 0.0745098, 1 )
border_blend = true
corner_radius_top_left = 1
corner_radius_top_right = 1
corner_radius_bottom_right = 1
corner_radius_bottom_left = 1
corner_detail = 5
shadow_size = 1

[node name="QuakeStyleWindow" type="Panel"]
margin_right = 1024.0
custom_styles/panel = SubResource( 1 )
script = SubResource( 2 )
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[node name="Content" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
rect_clip_content = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HideShow" type="Button" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = -13.0
margin_right = 95.0
margin_bottom = 13.0
focus_mode = 0
custom_styles/hover = SubResource( 3 )
custom_styles/pressed = SubResource( 4 )
custom_styles/normal = SubResource( 5 )
custom_fonts/font = ExtResource( 1 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
__meta__ = {
"_edit_use_anchors_": false
}
[connection signal="pressed" from="HideShow" to="." method="_on_HideShow_pressed"]
